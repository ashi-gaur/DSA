//{ Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.BigInteger;

class Main{
    
    
	public static void main(String[] args) throws NumberFormatException, IOException {
		Scanner sc=new Scanner(System.in);
		
		//input number of testcases
		int t=sc.nextInt();
		int m,n;
		while(t-->0) {
		    
		    
            Solution obj = new Solution();
            //input m and n
		    m = sc.nextInt();
		    n = sc.nextInt();
		    System.out.println(obj.posOfRightMostDiffBit(m, n));
		}
	}
}




// } Driver Code Ends


//User function Template for Java

class Solution
{
    //Function to find the first position with different bits.
    public static int posOfRightMostDiffBit(int m, int n)
    {
        if (m == n)
            return -1;

        int r = 1;
        String str1 = Integer.toBinaryString(m);
        String str2 = Integer.toBinaryString(n);
        int q = Math.min(str1.length(), str2.length());

        for (int i = 0; i < q; i++) {
            if (str1.charAt(str1.length()-1-i) != str2.charAt(str2.length()-1-i))
                return r;
            else
                r++;
        }
        return r;
    }
}


