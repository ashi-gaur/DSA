class Solution { 
    public int[][] updateMatrix(int[][] a) {
        int n = a.length;
        int m = a[0].length;
        int[][] ans=new int[n][m];
        int[][] vis=new int[n][m];
        Queue<int[]> q=new LinkedList<>();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(a[i][j]==0){ q.offer(new int[]{i,j,0});   vis[i][j]=1; }
                else{ vis[i][j]=0; }
            }
        }
        int[] dr={-1,0,1,0};
        int[] dc={0,1,0,-1};
        int length=0;
        while(!q.isEmpty()){
                int[] front = q.poll();
                int r = front[0];
                int c = front[1];
                int steps=front[2];
                ans[r][c]=steps;
                for(int i=0;i<4;i++){
                    int nr=r+dr[i];
                    int nc=c+dc[i];
                    if (nr >= 0 && nc >= 0 && nr < n && nc < m && vis[nr][nc] == 0) {
                        vis[nr][nc]=1;
                        q.offer(new int[] {nr,nc,steps+1});
                    }
                }
            }
        return ans;
    }
}
