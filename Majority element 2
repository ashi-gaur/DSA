class Solution {
    public List<Integer> majorityElement(int[] nums) {
        List<Integer> ans = new ArrayList<Integer>();
        int cnt = nums.length / 3; // Calculate the threshold count
        
        if (nums.length == 1) {
            ans.add(nums[0]);
            return ans;
        }
        
        Arrays.sort(nums); // Sorting the input array
        
        int freq = 1; // Initialize frequency counter
        
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] == nums[i - 1]) {
                freq++;
            } else {
                freq = 1;
            }
            
            if (freq > cnt && !ans.contains(nums[i - 1])) {
                ans.add(nums[i - 1]);
            }
        }
        
        // Check the last element if it's a majority element
        if (freq > cnt && !ans.contains(nums[nums.length - 1])) {
            ans.add(nums[nums.length - 1]);
        }
        
        return ans;
    }
}
