/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> largestValues(TreeNode root) {
        List<Integer> ans=new ArrayList<Integer>();
        Queue<TreeNode> q=new LinkedList<>();
        if(root==null){ return ans; }
        //ans.add(root.val);
        q.offer(root);
        while(!q.isEmpty()){
            int l=q.size();
            int max=Integer.MIN_VALUE;
            for(int i=0;i<l;i++){
                TreeNode a=q.poll();
                if(a.left!=null){ q.offer(a.left); }
                if(a.right!=null){ q.offer(a.right); }
                max=Math.max(max,a.val);
            }
            ans.add(max);
        }
        return ans;
    }
}
